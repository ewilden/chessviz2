// Generated by ReScript, PLEASE EDIT WITH CARE

import * as React from "react";
import * as Belt_Array from "rescript/lib/es6/belt_Array.js";
import * as TileButton from "./TileButton.res.mjs";
import * as Caml_option from "rescript/lib/es6/caml_option.js";
import * as JsxRuntime from "react/jsx-runtime";

var ranks = Belt_Array.range(1, 8);

var files = [
  /* 'a' */97,
  /* 'b' */98,
  /* 'c' */99,
  /* 'd' */100,
  /* 'e' */101,
  /* 'f' */102,
  /* 'g' */103,
  /* 'h' */104
];

function App(props) {
  var match = React.useState(function () {
        return "Nothing";
      });
  var setPhase = match[1];
  var phase = match[0];
  var tmp;
  tmp = typeof phase !== "object" ? "\u00A0" : (
      phase.TAG === "File" ? String.fromCharCode(phase._0) : String.fromCharCode(phase._0) + phase._1.toString()
    );
  var tmp$1;
  if (typeof phase !== "object") {
    tmp$1 = files.map(function (n) {
          var ns = String.fromCharCode(n);
          return JsxRuntime.jsx(TileButton.make, {
                      children: Caml_option.some(ns),
                      onClick: (function (_event) {
                          setPhase(function (param) {
                                return {
                                        TAG: "File",
                                        _0: n
                                      };
                              });
                        })
                    }, ns);
        });
  } else if (phase.TAG === "File") {
    var file = phase._0;
    tmp$1 = ranks.map(function (rank) {
          var rankS = String(rank);
          return JsxRuntime.jsx(TileButton.make, {
                      children: Caml_option.some(rankS),
                      onClick: (function (_event) {
                          setPhase(function (param) {
                                return {
                                        TAG: "Rank",
                                        _0: file,
                                        _1: rank
                                      };
                              });
                        })
                    }, rankS);
        });
  } else {
    tmp$1 = ranks.map(function (rank) {
          return JsxRuntime.jsx(TileButton.make, {
                      children: "n/a"
                    }, String(rank));
        });
  }
  return JsxRuntime.jsxs("div", {
              children: [
                JsxRuntime.jsx("h1", {
                      children: "Chess Visualization",
                      className: "text-3xl font-semibold"
                    }),
                JsxRuntime.jsx("h2", {
                      children: tmp,
                      className: "text-2xl"
                    }),
                JsxRuntime.jsxs("div", {
                      children: [
                        tmp$1,
                        JsxRuntime.jsx(TileButton.make, {
                              children: "⌫",
                              onClick: (function (_event) {
                                  setPhase(function (phase) {
                                        if (typeof phase !== "object" || phase.TAG === "File") {
                                          return "Nothing";
                                        } else {
                                          return {
                                                  TAG: "File",
                                                  _0: phase._0
                                                };
                                        }
                                      });
                                })
                            }, "⌫")
                      ],
                      className: "grid grid-cols-3 max-w-md"
                    })
              ],
              className: "p-6"
            });
}

var make = App;

export {
  make ,
}
/* ranks Not a pure module */
